name: Build MSI (version from csproj)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  build-msi:
    runs-on: windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # 1) Read Version from the first *.csproj we find (falls back to 1.0.0)
      - name: Extract version from csproj
        shell: pwsh
        run: |
          $proj = Get-ChildItem -Recurse -Filter *.csproj | Select-Object -First 1
          if (-not $proj) { Write-Host "No .csproj found, defaulting to 1.0.0"; "PRODUCT_VERSION=1.0.0" | Out-File -FilePath $env:GITHUB_ENV -Append; exit 0 }
          [xml]$xml = Get-Content $proj.FullName
          $ver = $xml.Project.PropertyGroup.Version
          if (-not $ver) { $ver = $xml.Project.PropertyGroup.AssemblyVersion }
          if (-not $ver) { $ver = "1.0.0" }
          # MSI wants 3-part version. If 4 parts, trim to first 3.
          if ($ver -match '^\d+\.\d+\.\d+(\.\d+)?$') {
            $parts = $ver.Split('.')
            $ver3 = ($parts[0..2] -join '.')
          } else {
            $ver3 = "1.0.0"
          }
          Write-Host "Using ProductVersion: $ver3"
          "PRODUCT_VERSION=$ver3" | Out-File -FilePath $env:GITHUB_ENV -Append

      # 2) Build your app
      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Publish app
        run: dotnet publish -c Release -o dist

      # 3) Write WiX authoring (uses $(var.ProductVersion) + fixed registry KeyPath)
      - name: Write WiX authoring
        shell: bash
        run: |
          mkdir -p installer
          cat > installer/MiniFileBot.wxs <<'WXS'
          <?xml version="1.0" encoding="UTF-8"?>
          <Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
            <Product Id="*"
                     Name="MiniFileBot"
                     Language="1033"
                     Version="$(var.ProductVersion)"
                     Manufacturer="MiniFileBot"
                     UpgradeCode="A4E6F40E-8BB0-4410-9C91-6B8B0A9D21E0">
              <Package InstallerVersion="500" Compressed="yes" InstallScope="perMachine" />
              <MediaTemplate EmbedCab="yes" CompressionLevel="high" />
              <MajorUpgrade AllowDowngrades="no"
                            DowngradeErrorMessage="A newer version of MiniFileBot is already installed." />

              <Property Id="WIXUI_INSTALLDIR" Value="INSTALLFOLDER" />
              <UIRef Id="WixUI_InstallDir" />
              <UIRef Id="WixUI_ErrorProgressText" />

              <Directory Id="TARGETDIR" Name="SourceDir">
                <Directory Id="ProgramFilesFolder">
                  <Directory Id="INSTALLFOLDER" Name="MiniFileBot" />
                </Directory>
                <Directory Id="ProgramMenuFolder" />
              </Directory>

              <DirectoryRef Id="ProgramMenuFolder">
                <Component Id="ProgramMenuShortcuts" Guid="*">
                  <Shortcut Id="StartMenuShortcut"
                            Name="MiniFileBot"
                            Target="[INSTALLFOLDER]MiniFileBot.exe"
                            WorkingDirectory="INSTALLFOLDER" />
                  <RemoveFolder Id="RemovePMF" Directory="ProgramMenuFolder" On="uninstall" />
                  <!-- Properly escaped registry KeyPath to satisfy ICE03 -->
                  <RegistryValue Root="HKCU"
                                 Key="Software\\MiniFileBot\\Installer"
                                 Name="Installed"
                                 Type="string"
                                 Value="1"
                                 KeyPath="yes" />
                </Component>
              </DirectoryRef>

              <ComponentGroup Id="AppFiles" Directory="INSTALLFOLDER">
                <Component Id="ExeCmp" Guid="*">
                  <!-- Make sure this filename matches your published EXE -->
                  <File Id="AppExe" Source="$(var.BuildOut)\MiniFileBot.exe" KeyPath="yes" />
                </Component>
                <!-- Optional config alongside EXE -->
                <Component Id="CfgCmp" Guid="*">
                  <File Id="Cfg" Source="$(var.BuildOut)\config.yaml" />
                </Component>
              </ComponentGroup>

              <Feature Id="MainFeature" Title="MiniFileBot" Level="1">
                <ComponentGroupRef Id="AppFiles" />
                <ComponentRef Id="ProgramMenuShortcuts" />
              </Feature>
            </Product>
          </Wix>
          WXS

      # 4) Install WiX and build the MSI (pass ProductVersion & BuildOut)
      - name: Install WiX Toolset
        run: choco install wixtoolset --version=3.14.1.8722 -y

      - name: Build MSI
        shell: cmd
        run: |
          set BuildOut=%CD%\dist
          set ProductVersion=%PRODUCT_VERSION%
          echo Building with ProductVersion=%ProductVersion%
          candle.exe installer\MiniFileBot.wxs -dBuildOut="%BuildOut%" -dProductVersion="%ProductVersion%" -ext WixUIExtension -o installer\MiniFileBot.wixobj
          if errorlevel 1 exit /b 1
          light.exe installer\MiniFileBot.wixobj -ext WixUIExtension -o installer\MiniFileBot-%ProductVersion%.msi
          if errorlevel 1 exit /b 1

      # 5) Upload MSI artifact
      - name: Upload MSI
        uses: actions/upload-artifact@v4
        with:
          name: MiniFileBot-${{ env.PRODUCT_VERSION }}.msi
          path: installer/MiniFileBot-${{ env.PRODUCT_VERSION }}.msi













